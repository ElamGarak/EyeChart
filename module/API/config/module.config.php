<?phpreturn [    'controllers' => [        'factories' => [            'API\\V1\\Rpc\\Login\\Controller' => \API\V1\Rpc\Login\LoginControllerFactory::class,            'API\\V1\\Rpc\\Logout\\Controller' => \API\V1\Rpc\Logout\LogoutControllerFactory::class,            'API\\V1\\Rpc\\CheckSessionStatus\\Controller' => \API\V1\Rpc\CheckSessionStatus\CheckSessionStatusControllerFactory::class,            'API\\V1\\Rpc\\RefreshSession\\Controller' => \API\V1\Rpc\RefreshSession\RefreshSessionControllerFactory::class,        ],    ],    'router' => [        'routes' => [            'api.rpc.login' => [                'type' => 'Segment',                'options' => [                    'route' => '/api/login',                    'defaults' => [                        'controller' => 'API\\V1\\Rpc\\Login\\Controller',                        'action' => 'login',                    ],                ],            ],            'api.rpc.logout' => [                'type' => 'Segment',                'options' => [                    'route' => '/api/logout',                    'defaults' => [                        'controller' => 'API\\V1\\Rpc\\Logout\\Controller',                        'action' => 'logout',                    ],                ],            ],            'api.rpc.edit-application-type' => [                'type' => 'Segment',                'options' => [                    'route' => '/api/editApplicationType',                    'defaults' => [                        'controller' => 'API\\V1\\Rpc\\EditApplicationType\\Controller',                        'action' => 'editApplicationType',                    ],                ],            ],            'api.rpc.check-session-status' => [                'type' => 'Segment',                'options' => [                    'route' => '/api/checkSessionStatus',                    'defaults' => [                        'controller' => 'API\\V1\\Rpc\\CheckSessionStatus\\Controller',                        'action' => 'checkSessionStatus',                    ],                ],            ],            'api.rpc.refresh-session' => [                'type' => 'Segment',                'options' => [                    'route' => '/api/refreshSession',                    'defaults' => [                        'controller' => 'API\\V1\\Rpc\\RefreshSession\\Controller',                        'action' => 'refreshSession',                    ],                ],            ],        ],    ],    'zf-versioning' => [        'uri' => [            0 => 'api.rpc.login',            1 => 'api.rpc.logout',            2 => 'api.rpc.check-session-status',            3 => 'api.rpc.refresh-session',        ],    ],    'zf-rpc' => [        'API\\V1\\Rpc\\Login\\Controller' => [            'service_name' => 'Login',            'http_methods' => [                0 => 'POST',            ],            'route_name' => 'api.rpc.login',        ],        'API\\V1\\Rpc\\Logout\\Controller' => [            'service_name' => 'Logout',            'http_methods' => [                0 => 'POST',            ],            'route_name' => 'api.rpc.logout',        ],        'API\\V1\\Rpc\\CheckSessionStatus\\Controller' => [            'service_name' => 'CheckSessionStatus',            'http_methods' => [                0 => 'POST',            ],            'route_name' => 'api.rpc.check-session-status',        ],        'API\\V1\\Rpc\\RefreshSession\\Controller' => [            'service_name' => 'RefreshSession',            'http_methods' => [                0 => 'POST',            ],            'route_name' => 'api.rpc.refresh-session',        ],    ],    'zf-content-negotiation' => [        'controllers' => [            'API\\V1\\Rpc\\Login\\Controller' => 'Json',            'API\\V1\\Rpc\\Logout\\Controller' => 'Json',            'API\\V1\\Rpc\\CheckSessionStatus\\Controller' => 'Json',        ],        'accept_whitelist' => [            'API\\V1\\Rpc\\Login\\Controller' => [                0 => 'application/vnd.api.v1+json',                1 => 'application/json',                2 => 'application/*+json',            ],            'API\\V1\\Rpc\\Logout\\Controller' => [                0 => 'application/vnd.api.v1+json',                1 => 'application/json',                2 => 'application/*+json',            ],            'API\\V1\\Rpc\\CheckSessionStatus\\Controller' => [                0 => 'application/vnd.api.v1+json',                1 => 'application/json',                2 => 'application/*+json',            ],            'API\\V1\\Rpc\\RefreshSession\\Controller' => [                0 => 'application/vnd.api.v1+json',                1 => 'application/json',                2 => 'application/*+json',            ],        ],        'content_type_whitelist' => [            'API\\V1\\Rpc\\Login\\Controller' => [                0 => 'application/vnd.api.v1+json',                1 => 'application/json',            ],            'API\\V1\\Rpc\\Logout\\Controller' => [                0 => 'application/vnd.api.v1+json',                1 => 'application/json',            ],            'API\\V1\\Rpc\\RefreshSession\\Controller' => [                0 => 'application/vnd.api.v1+json',                1 => 'application/json',            ],            'API\\V1\\Rpc\\GetFuelCard\\Controller' => [                0 => 'application/vnd.api.v1+json',                1 => 'application/json',            ],        ],    ],    'zf-mvc-auth' => [        'authorization' => [        ],    ],    'zf-content-validation' => [        'API\\V1\\Rpc\\CheckSessionStatus\\Controller' => [            'input_filter' => 'API\\V1\\Rpc\\CheckSessionStatus\\Validator',        ],    ],    'input_filter_specs' => [        'API\\V1\\Rpc\\CheckSessionStatus\\Validator' => [            0 => [                'required' => true,                'validators' => [],                'filters' => [],                'name' => 'token',                'field_type' => 'string',                'allow_empty' => true,                'continue_if_empty' => true,            ],        ],    ],];